//
//  Config.h
//  usc
//
//  Created by 刘俊 on 14-9-11.
//  Copyright (c) 2014年 yunzhisheng. All rights reserved.
//

/*
 ----------1.0.1
 1.修复了录音完成后音量变小的问题
 2.优化了内存管理
 
 
 
 ----------1.0.2
 1.增加并优化了日志
 
 
 
 ----------1.1.1
 1.录音模块所在线程改为手动创建和释放
 2.增加了间隔提示，短时间内（0.2s）重复调用start方法会提示操作太频繁
 
 
 
 ----------1.2.1
 1.更新了识别SDK和对应的模型文件
 
 
 
 ----------1.3.1
 1.更新了liboralEdu.a
 
 
 
 ----------1.4.1
 1.更新了liboralEdu.a
 
 
 
 ----------1.5.1
 1.更新了liboralEdu.a （支持长文本，减小了在离线打分差值）
 
 
 
 ----------1.5.2
 1.优化了USCRecorder的实现，解决了内存泄露问题
 PS：此次修改源于客户的一个需求，他们要求在接口文件中增加释放引擎资源的接口，类似release。
     通过测试验证，对于MRC工程，可以通过调用release来释放引擎资源；对于ARC工程，将引擎实例置为nil可以起到释放资源的目的
 
 
 
 ----------1.5.3
 1.去除DNS容错，修复了服务器连接出错时等待时间过长问题（在ascclient.cpp中修改，L562）
 
 
 
 ----------1.5.4
 1.修复了长文本和文本为空时的报错（在Recognizer.mm中大量使用了isRecognizerCancelled来处理多线程问题，存在隐患）
 
 
 
 ----------1.6.1
 更新离线识别引擎
 1.修复文本过长错误码不匹配的问题
 2.修复文本较长时输出协议不完整的问题
 
 
 
 ----------1.7.1
 1.更新了liboralEdu.a
 
 
 
 ----------1.8.1
 1.更新了liboralEdu.a(修复了未读、少读情况下打分高的问题)
 
 
 
 ----------1.9.1
 1.更新了liboralEdu.a(离线引擎修复了部分bug)
 
 
 
 ----------1.9.2
 1.修改识别过程中的断开连接的错误提示
 
 
 
 ----------1.9.3
 1.修复了vad失效的问题
 
 
 
 ----------1.9.4
 2015.4.14
 1.增加了麦克风授权的错误判断
 
 
 
 ----------1.9.5
 2015.4.20
 1.修改了音量实现
 
 
 
 ----------1.9.6
 2015.4.20
 1.在调用stop方法中加了500ms的延时防止录音被截断
 
 
 
 ----------1.9.7
 2015.4.21
 1.新增在线录音数据回调接口
 2.服务器端口改为edu.hivoice.cn:9088
 3.修复了麦克风权限判定失误的问题
 
 
 
 ----------1.9.8
 2015.4.21 7:01
 1.服务器端口改为eval.hivoice.cn:80
 2.在线录音数据服务器地址改为：edu.hivoice.cn:9088
 
 
 
 ----------1.10.1
 2015.4.22
 1.更新离线引擎 MD5：6581a3b59321cb85be8e3e3618cbc713
 
 
 
 ----------1.10.2
 2015.4.22 4:45
 1.更新了离线引擎getResult的实现
 2.更新离线引擎的接口文件
 
 
 
 ----------1.10.3
 2015.4.23
1.将ASRVadWrapper和ASRVad中音量函数删除，以解决模拟器版本的编译错误
 
 
 
 ----------1.10.4
 2015.4.28
 1.C++库的链接方式改为C++ 11 、libc++
 
 
 ----------2.0.1
 2015.5.9
 1.将识别相关代码从USCRecognizer中独立出去，建立USCRecognitionManager专门负责调度在线、离线识别模块
 2.在线、混合识别代码合并，通过宏定义：MIX_RECOGNIZE进行切换,共用一个头文件
 3.更新了录音模块的数据传输方式（回调传输）
 
 
 ----------2.0.2
 2015.6.1
 1.录音停止以后才开始进行识别（在停止回调中启动识别）
 2.在不调用- (void)setVadFrontTimeout:(int)frontTime backTimeout:(int)backTime;方法时不启动VAD
  （VAD的时间参数有待校准）
 3.明确了混合模式下的回调时序问题，具体修改在USCRecognitionManager.mm文件最上面，基本准则如下：
   onResult和onError方法在单次识别中只会执行一个
 
    - onResult -
    （1）如果在线先执行且结果正常，则直接返回在线
    （2）如果离线先执行，则等待在线结果
    （3）如果离线先执行，且发现在线识别出错，则直接取离线结果
 
 
    - onError -
     (1)在线出错，离线有结果，则返回离线结果，否则等待离线结束
     (2)离线出错，在线有结果，则返回在线结果，否则等待在线结束
     (3)在线、离线都出错，取离线错误
 
 
 ----------2.0.3
 2015.6.3
 1.更新了离线引擎（更新了资源文件但没有添加国际音标的特殊版本，限制时间为2016.5.30）
   MD5 : f34f5b096b6f5fd0826325d45b14cdd2
 2.增加了连续重复调用start、stop方法的保护机制
 3.在Recognier中梳理了单次识别的生命周期（待完善）
 
 
 
 ----------2.0.4
 2015.6.3.539
 1.将输出的录音文件转码为MP3格式
 2.修复了文本出错时的回调异常问题（暂时打补丁解决，流程需梳理）
 3.在线识别的取结果超时时间改为5S（ASR_WAITING_RESULT_TIMEOUT_ID）
 4.文本为空或长度为零是不再开启在线评测(偶现问题，很诡异)
 
 
 
 ----------2.0.5
 2015.6.4
 1.USCMP3Encoder会在压缩所有数据后给出结束回调encodeDidFinished
 2.最后的回调onEndOral会等待识别和MP3编码结束以后才给出
 
 
 
 ----------2.0.6
 2015.6.5
 1.将离线引擎的启动操作移到main函数中（之前在执行addOperation方法之前）
   该修改可以解决引擎启动出错导致的线程卡死问题
 2.增加网络错误提示-10007
 
 
 
 ----------2.0.7
 2015.6.5.517
 1.在线识别的start的超时时间设为5000（之前没有超时时间，5000是秒还是毫秒带验证）
 
 
 
 ----------2.1.0
 2015.6.11
 1.在引擎打分的基础上根据客户要求对分数进行定向校准，在USCResult中处理
 2.修改JSONKit，将输出的浮点数的精度改为.3g（JSONKit L2763 // LJ）
 3.Other Linker Flags 的值改为 -ObjC
 
 
 
 ----------2.2.0
 2015.6.18
 1.在线引擎部分将ASR_IMEI_ID、ASR_USER_ID对应的值改为identifierForVendor（之前是mac地址）
 2.头文件中增加接口- (void)setIdentifier:(NSString *)identifier;
 
 

 ----------2.2.1
 2015.7.2
 1.从工程中移除JSONKit，USCResult中的分数定向校准使用系统JSON处理方法
 
 
 
 ----------2.3.0
 2015.7.3
 1.更新离线引擎，支持模拟器编译
 （经测试真机版本与合并版本大小只差了100k,暂时使用合并版本）
 （过期时间：2016-4-30）
 
 
 ----------2.4.0
 2015.7.7
 1.更新离线引擎，修正了国际音标乱码的问题
 （配合修改了USCOralEduWrapper，getResult的编码格式为UTF8）
 2.重写了通过pcm进行识别的模块（未完成）
 
 
 
 ----------2.4.1
 2015.7.8
 1.增加USCPCMReaderManager,用于统筹音频的两种接收方式（USCRecorder和USCPCMReader）
 2.根据第一点调整了USCRecognizer.mm的实现
 
 
 
 ----------2.4.2
 2015.7.9
 1.SDK没有修改
 2.更新了测试工具
 
 
 
 ----------2.4.3
 2015.7.10.937
 1.识别模块增加超时，暂定1S
 2.调整了各个模块的资源释放顺序，避免了潜在的线程问题
 
 
 
 
 ----------2.4.4
 2015.7.10.---
 1.将识别模块超时时间设为可配置，头文件增加接口 -(void)setRecognitionTimeout:(NSTimeInterval)interval;
 
 
 
 ----------2.4.5
 2015.7.10.551
 1.增加MP3编码配置开关（调试用，过渡方案）
 
 
 
 ----------2.4.6
 2015.7.13.749
 1.修改Demo(在OnStopOral回调后禁用按钮)
 2.识别模块，将识别出错时的停止识别（stop）改为取消识别（cancel）
 3.将识别超时的错误定义改为宏定义（很奇怪的bug，回调中的log显示error被NSArray、NSDictionary等各种数据类型赋值，原因不明）
 
 
 
 ----------2.4.7
 2015.7.13.819
 1.将识别超时改为在线超时（只在获得离线结果但还没有在线结果时启动，在返回结果或错误后停止）
 
 
 
 ----------2.4.8
 2015.7.14.932
 1.取消接口文件中设定超时的接口： -(void)setRecognitionTimeout:(NSTimeInterval)interval;
 2.将识别超时的时长设为1s
 
 
 
 ----------2.4.9
 2015.7.14.1132
 1.取消对语音时长的限制，将默认的最大的时长设为30min
 （修改maxSpeechSecond的初始值，同时去掉了setValueInt函数中对maxSpeechSecond的赋值)
 
 
 ----------2.5.0
 2015.7.15.1123
 1.离线引擎更新，增加流利度、完整度和标准度
 （过期时间：2016-4-30）
 
 
 ----------2.6.0
 2015.7.15.322
 1.离线引擎更新，改了Json结果中一个字段的名称
 （过期时间：2016-4-30）
 
 
 ----------2.7.0
 2015.7.15.540
 1.离线引擎更新，修改了完整度打分
 （过期时间：2016-4-30）
 2.在MP3Encode中增加encodeCancel方法（未调用）
 
 
 ----------2.8.0
 2015.7.16.411
 1.离线引擎更新，修改了输出JSON的错误
 （过期时间：2016-4-30）
 2.在线识别超时时间（ASR_WAITING_RESULT_TIMEOUT_ID）动态调整，每10个字节对应500ms的超时时间，以此累加
 
 
 
 ----------2.8.1
 2015.7.16.641
 1.修改在线识别超时时间，每60个字符的超时时间是3s (不满60个为3s)
 
 
 ----------2.9.0
 2015.7.23
 1.离线引擎更新，修复bug，将资源路径的最大长度改为500
 （过期时间：2017.08.01）
 
 
 
 
 ----------2.9.1
 2015.7.27
 1.修改编译选项，将Deployment PostProcessing设为NO
 （过期时间：2017.08.01）
 
 
 
 ----------2.9.2
 2015.7.29
 1.修改编译选项，将Deployment PostProcessing设为YES
 （过期时间：2017.08.01）

 
 
 ----------2.9.3
 2015.8.5
 1.修复了调用cancel方法时返回操作太频繁的错误
 
 
 
 
 ----------2.10.1
 2015.8.4
 1.重构在线识别模块（beta）
 
 
 
 ----------2.10.2
 2015.8.5
 1.修改了start和stop的readtimeout时长（每10个字节对应500ms的超时时间，以此累加）
 2.调整了部分log
 
 
 
 ----------2.10.3
 2015.8.6
 1.增加IP备份功能：
 
     连接eval.hivoice.cn评测
     连接失败，从三地机房IP中随机选取一个继续尝试连接
     连接失败，从剩余的两地机房IP中随机选取一个继续尝试连接
     连接失败，尝试最后一个机房IP
     连接失败，报错。
     保存连接成功的ip到内存，应用关闭之前，默认使用该ip。
     如果后续使用该ip连接还是失败，重复上面的过程。
     应用关闭，则重置逻辑。
 
 

 ----------2.10.4
 2015.8.13
 1.离线引擎库更新，支持自定义评分松紧度
 2.增加sdk离线松紧度接口
 
 
 
 ----------2.10.5
 2015.8.19
 1.根据朱三保的修改整理代码
 
 
 
 ----------2.10.6
 2015.8.20
 1.修正了sessionID编码出错的问题
 
 
 
 ----------2.10.7
 2015.8.21
 1.清理工程中libClient的相关代码，整理目录结构
 
 
 
 ----------2.10.8
 2015.8.25.437
 1.增加DNS解析出错情况下的IP备份
 
 
 
 ----------2.10.9
 2015.9.6
 1.start方法中增加了录音模式的设置
 2.将备选IP中的 101.226.196.51 改为 114.141.158.124
 
 
 
 ----------2.10.10
 2015.9.7
 1.修复了在线识别中返回值解析不全的bug
 2.在线识别的stop方法中增加了异常处理
 
 
 
 ----------2.10.11
 2015.9.7.309
 1.在线识别socket回调socketDidDisconnect中增加对于服务端关闭连接的处理
 2.注释了在线识别的stop方法中增加的异常处理（与第一点保持一致）
 
 
 
 ----------2.10.12
 2015.9.7.444
 1.修复了断网状态下在线识别无法停止的bug
 
 
 
 ----------2.10.13
 2015.9.8.534
 1.修复了文本包含中文会乱码的bug
 
 
 
 ----------2.10.14
 2015.9.8.639
 1.将IP备份的启动条件改为连接拒绝（之前包含了超时）
 
 
 
 ----------2.10.15
 2015.9.9.209
 1.将离线识别结果回调中的操作转移至主线程
 
 
 
 ----------2.10.16
 2015.9.9.402
 1.在线识别的IP备份在连接成功时赋值（之前没有对全局缓存赋值）
 
 
 
 ----------2.10.17
 2015.9.9.914
 1.修改了超时定时器(recognitionTimer)的初始化方法（防止丢失引用）
 2.修改了在线和离线识别类的dealloc方法
 3.将GCDAsyncSocket移至USCRecognitionManager
 
 
 
 ----------2.11.0
 2015.9.10
 1.增加打分系数设置接口 ： - (void)setOutScoreCoefficient:(float)score
 
 
 
 ----------2.11.1
 2015.9.10.552
 1.区分B模式和E模式
 
 
 
 ----------2.12.0
 2015.9.23.1131
 1.在获取数据包时增加合法性判断（超过10M定为非法）
 
 

 ----------2.12.1
 2015.9.24.343
 1.修改USCMarcos.h，将控制台日志保存至Document目录，每次识别结束时更新（目前关闭控制台日志时也会保存）
 
 
 
 ----------2.12.2
 2015.9.29.219
 1.在USCErrorCode中增加在线识别服务端返回的错误码说明
 
 
 
 ----------2.13.0
 2015.10.8.342
 1.重新梳理了工程中所有的错误码（各平台保持统一）
 2.更换了工程中Socket类（将开源的GCDAsyncSocket改名为USCAsyncSocket，避免和应用层产生重复引用问题）
 
 
 
 ----------2.14.0
 2015.10.12.936
 1.在线识别模块中增加HTTP评测功能（USCHTTPRecognition），启动策略：在线识别失败后执行
 2.取消了操作太频繁的错误提示（在USCRecognizer中使用信号处理频繁操作）
 
 
 
 ----------2.14.1
 2015.10.12.1457
 1.在log输出分为两级：1.有无log 2.系统log还是自定义log（自定义log会默认写文件）
 
 
 
 ----------2.14.2
 2015.10.13
 1.http评测增加vad
 
 
 
 ----------2.14.3
 2015.10.14
 1.在线识别的备份策略调整：每次启动在线识别时随机选取一个私有协议备份IP，一个http备份IP。
                       若识别出错，则先使用私有协议备份ip尝试。
                       若仍然失败，则使用http备份ip进行尝试。
                       此时若仍然出错则直接返回错误。
                       若以上某一种方式可以成功评测时，则缓存当前状态：评测方式、IP、端口。下次开始评测时直接使用
 
 
 
 ----------2.14.4
 2015.10.15
 1.完善服务端错误码
 2.修复bug（从ip备份切换到http时启动时机过早的问题）7
 
 
 
 ----------2.14.5
 2015.10.22
 1.修复bug（组合识别模式使用了过新的接口containsString，改为rangeOfStrng）
 2.增加在线生词的错误码2001
 3.在线识别的轮询间隔函数改用usleep(之前为sleep)
 
 
 
 ----------2.14.6
 2015.10.22.1745
 1.修复了设置打分系数的bug（2.14.5第一点的改动有问题）
 2.修复了在线识别http启动时的崩溃问题（需要和在线识别的生命周期同步）
 
 
 
 
 ----------2.14.7
 2015.10.23.1414
 1.增加在线OPUS编码模块（UniOpus）,在RecognitionManager中为recognition提供编码过的pcm数据
 (此修改主要是为了解决在性能较弱的设备上pcm被截断的问题)
 2.修改了MP3_Encoding的实现
 （此修改主要是为了解决在性能较弱的设备上MP3被截断的问题）
 
 
 
 ----------2.14.8
 2015.10.23.1734
 1.修改USCRecorder逻辑,在外部执行停止操作的500ms延时内，将不触发超时
 
 
 
 
 ----------2.14.9
 2015.10.26.1904
 1.修改USCRecorder逻辑,将音频数据的处理放到子线程中，避免回调方法阻塞
 2.删除了USCRecognizer中的部分代码
 3.修改MP3Encoder的实现，将lame的关闭操作放到具体流程中（cancel和finishCallBack），避免在dealloc中执行
 
 
 
 
 ----------2.14.10
 2015.10.26.2015
 1.在USCPCMReaderManager中onRecordingStart的回调放到主线程中
 2.将没有录音权限的错误码改为-1001
 
 
 
 
 ----------2.14.11
 2015.10.26.2106
 1.根据上个版本第一点修改将USCRecognizer中的oralBegin方法放到主线程中
 2.梳理了USCRecognition中所有启动HTTP的代码，统一放到stop阶段启动（待完善！！！！！！！！！！）
 
 
 
 
 ----------2.14.12
 2015.10.27.1010
 1.根据上个版本第一点修改将USCRecognizer中的oralBegin方法放到主线程中
 2.对于上个版本第二点做了临时修改
 
 
 
 
 ----------2.14.13
 2015.10.27.1116
 1.梳理了USCRecognition中的备份流程
 
 
 
 ----------2.14.14
 2015.10.27.1431
 1.梳理了USCRecognition中的备份流程
 
 
 
 ----------2.14.15
 2015.10.27.1741
 1.梳理了USCRecognition中的备份流程
 
 
 
 ----------2.14.16
 2015.10.27.1855
 1.对于版本2.14.12的第一点修改做了调整（线程死锁问题）
 
 
 
 ----------2.14.17
 2015.10.28.0031
 1.修改了音频数据处理线程的判断条件（修复某些设备上录音被截断的问题）
 
 
 
 ----------2.14.18
 2015.10.30
 1.将vad和音量处理功能独立出来，USCRecorder和USCPCMReader共用
 
 
 
 ----------2.15.0
 2015.11.3
 1.在线识别增加备份超时判断，在超时时推出备份策略，使用eval
 2.在线识别在私有协议连接成功后记录当前IP，IP备份时排除当前IP
 3.更新server端错误码（65280->65527）
 4.默认错误统一输出-65534
 
 
 
 ----------2.16.0
 2015.11.5
 1.将私有协议评测（USCSocketRecogniton）和http评测(USCHTTPRecogniton)分离，由在线识别模块(USCRecognition)统一管理
 
 
 
 
 ----------2.16.1
 2015.11.5.15.49
 1.合并在线重构部分
 
 
 
 
 ----------2.16.2
 2015.11.5.18.23
 1.整理2.15.0的相关修改
 2.优化资源释放（USCSocketRecognition、USCHTTPRecogntion）
 
 
 
 
 ----------2.16.3
 2015.11.10.1011
 1.将音频输出的格式改为可配置（audioType），默认输出PCM
 
 
 
 
 ----------2.16.4
 2015.11.13.1600
 1.修复bug，识别模块loadFinanlStop方法，在重置完状态后再给回调(isRecognizerStopped = YES;放到了回调之前执行)
 
 
 
 
 ----------2.16.5
 2015.11.18.1401
 1.将deployment postprocessing设为YES
 
 
 
 
 ----------2.16.6
 2015.11.19.1734
 1.修复bug，在私有协议评测中增加了错误处理（socketDidDisconnect回调中code为7时）
 
 
 
 
 ----------2.16.7
 2015.11.20.1640
 1.修复bug，调整http识别的启动识别（在opus编码完成后或者在线识别结束后，具体看opus编码完成的时机）
 2.opus被取消时也给出回调以完成后续流程
 
 
 
 
 ----------2.16.8
 2015.11.23.1819
 1.增加文本长度校验，为空或者超过5000均会报错
 2.在线私有协议识别：如果服务器返回错误，则立即断开连接，不再等待超时
 
 
 
 
 ----------2.16.9
 2015.11.24.1406
 1.在执行cancel操作时将在线识别模块执行stop操作（之前是置为nil）
 2.增加录音数据监控类，暂未使用
 
 
 
 
 ----------2.16.10
 2015.11.24.1447
 1.将识别和MP3转码模块的初始化放到录音开启成功之后
 
 
 
 
 ----------2.16.11
 2015.11.25.1539
 1.在线识别模块，如果服务器返回错误，则直接报错，不进行备份操作
 2.混合模式下，不启用在线识别的备份机制，只要出错就使用离线结果(backupEnable)
 3.USCRecognitionManager中，离线识别的回调都放到主线程中处理
 
 
 
 
 ----------2.16.12
 2015.11.24.1927
 1.上一版本第1点改为：如果服务器返回文本相关错误，则直接报错，否则还是执行备份流程
 
 
 
 
 ----------2.16.13
 2015.11.26.1652
 1.每次识别开始前对opus执行reset操作
 
 
 
 
 ----------2.16.14
 2015.11.27.1818
 1.将oralEngineDidInit方法集成进在线识别，并修复了其在混合识别中不回调的bug
 （SDK的生命周期中增加了一个状态：初始化。很多设置可在该阶段完成，并在出错时由oralEngineDidInit反馈给应用，提供给应用一个提前预警的机制）
 
 
 
 ----------2.16.15
 2015.12.02.1117
 1.将备份超时的状态保存在内存中（之前是写文件）
 
 
 
 ----------2.17.0
 2015.12.07.1731
 1.修改域名（测试时改错了）
 2.评测模式及打分系数的设置策略修改为：如果打分系数为1，则输入什么模式就使用什么模式；如果不为1则转换为对应的完整模式，在线和离线都需要转换
 
 
 ----------2.17.1
 2015.12.09.1630
 1.离线模式，PCM识别，如果出错则停止音频读取
 2.如果文本中只包含空格，则报文本为空的错误码
 3.文本长度上限定为5000
 
 
 ----------2.17.2
 2015.12.10.1448
 1.USCResult的reset方法修改，重置时将存放结果的string置为nil
 2.在线识别，长文本，如果连接被断开，则resume阶段立即结束（修改了resume的循环控制条件）
 
 
 
 ----------2.17.3
 2015.12.11.0929
 1.git出错，重新提交上个版本的内容
 
 
 
 ----------2.17.4
 2015.12.11.1136
 1.MP3编码线程的执行条件增加一条：_isEncodeCanceled != NO
 2.在UniOpus初始化时加了模式设置 WB_MODE
 
 
 ----------2.17.5
 2015.12.14.1440
 1.将离线等待在线的超时时间设为2S（#临时修改#）
 
 
 ----------2.18.0
 2015.12.16.1519
 1.修改了GCDAsyncSocket源码中作connect操作的线程优先级（修复了混合模式下频繁报 connect time out 的错误）
 2.重写了opus编码模块，去掉了对C++封装类（Opuswrapper）的依赖
 3.在线私有协议识别，resume时会合并所有缓存数据一次上传（之前是单个数据包上传）
 4.USCRecognition和UniOpusEncode增加cancel方法（之前一律调用stop方法，导致线程无法立即停止，引发crash）
 
 
 ----------2.18.1
 2015.12.16.1859
 1.UniOpusEncode中如果cancel，则不执行回调(解决评测生词时的闪退问题)
 
 
 ----------2.18.2
 2015.12.17.0929
 1.UniSocketRecognition中增加cancel方法
 
 
 ----------2.18.3
 2015.12.18.1538
 1.离线识别线程增加50ms的sleep，已确保优先给出在线结果
 
 
 ----------2.18.4
 2015.12.18.1556
 1.将上个版本修改的sleep时间改为100ms（不同设备的阈值不同，性能越好，离线越快）
 
 
 ----------2.18.5
 2015.12.18.1556
 1.将离线识别线程的优先级调为low
 
 
 ----------2.18.6
 2015.12.24.1119
 1.USCPCMReader的读取增加100ms的间隔，已确保和真实音频录入的时间接近
 2.注释掉了在线识别中备份重置功能
 3.识别模块中设置默认评测模式为B
 
 
 ----------2.18.7
 2016.01.07.1133
 1.将MP3编码的码率改为32，将编码质量改为9（9为最低，但速度最快）
 
 
 ----------2.19.0
 2016.03.10.1405
 1.在线识别增加延时识别模式：aysncRecognize，默认为NO，不开启。
 2.增加延时识别回调 - (void)onAsyncResult:(NSString *)url;
   开启延时评测时，不回调onResult
   关闭延时评测时，不回调onAsyncResult
 
 
 ----------2.19.1
 2016.03.10.1745
 1.延时评测只在纯在线模式中生效（设值时增加判断）
 
 
 
 ----------2.19.2
 2016.03.14.1423
 1.修改延时评测端口和MP3端口（配合智慧流延时评测）
 
 
 
 ----------2.19.3
 2016.05.10.1440（pxh第一次更新）
 1.更改评测服务器地址和返回MP3数据服务器地址
 
 
 
 ----------2.19.4
 2016.06.03.1000（pxh第二次更新）
 1.修改了通过http评测时不能记录设备identifier的bug
 2.修改评测逻辑确保开放题型（json格式的文本）只走在线评测
 3.修改了私有协议ip选择逻辑（第一次评测失败后比较返回ip和所选ip的前三位确保所选ip与当前ip的机房不同）
 
 
 
 ----------2.19.5
 2016.06.05.1000（pxh第三次更新）
 1.新增了混合模式下在线离线的选择
 
 
 
 ----------2.19.6
 2016.06.21.2056（pxh第四次更新）
 1.还原私有ip备份机制
 2.新增离线结果等待时间控制功能
 
 
 
 
 ----------2.19.7.1
 2016.06.27.1110（pxh第五次更新）
 1.更新最新版本的离线资源包（一万五千个最常用的英语单词列表）
 2.离在线混合版本内存优化小于36M
 */
